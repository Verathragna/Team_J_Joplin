name: Joplin Continuous Integration
on: [push, pull_request]
jobs:
  pre_job:
    # if: github.repository == 'laurent22/joplin'
    # Do not use unbuntu-latest because it causes `The operation was canceled` failures:
    # https://github.com/actions/runner-images/issues/6709
    runs-on: ubuntu-20.04
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: 'same_content_newer'

  # Removed for testing

  ServerDockerImage:
    needs: pre_job
    # if: github.repository == 'laurent22/joplin' && needs.pre_job.outputs.should_skip != 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Do not use unbuntu-latest because it causes `The operation was canceled` failures:
        # https://github.com/actions/runner-images/issues/6709
        os: [ubuntu-20.04]
    env:
      VERSION: 0.0.0-beta
      IMAGE: ghcr.io/maresmar/joplin
    steps:
      - name: Clenup runner space # based on https://github.com/orgs/community/discussions/25678
        run: rm -rf /opt/hostedtoolcache/Java* /opt/hostedtoolcache/Python /opt/hostedtoolcache/PyPy
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
      - name: Install Yarn 
        run: |
          # https://yarnpkg.com/getting-started/install
          corepack enable
          yarn install
      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.IMAGE }}
          tags: |
            type=ref,event=tag
            type=raw,value=${{ env.VERSION }}
      - name: Build args
        run: |
          echo DATE=`date -u +'%FT%T.%2NZ'` >> $GITHUB_ENV
          echo REV=`git rev-parse --short HEAD` >> $GITHUB_ENV
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile.server 
          build-args: |
            BUILD_DATE=${{ env.DATE }}
            REVISION=${{ env.REV }}
            VERSION=${{ env.VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64, linux/arm64
          # load: true works only with amd64
          push: true
      - name: Validate build
        env:
          BUILD_SEQUENCIAL: 1
        run: |
          # Basic test to ensure that the created build is valid. It should exit with
          # code 0  if it works.
          docker run ${{ env.IMAGE }}:${{ env.VERSION }} node dist/app.js migrate list
 
      - name: Check HTTP request
        run: |
          # Need to pass environment variables:
          docker run -p 22300:22300 ${{ env.IMAGE }}:${{ env.VERSION }} node dist/app.js --env dev &

          # Wait for server to start
          sleep 30

          # Check if status code is correct
          # if the actual_status DOES NOT include the expected_status
          # it exits the process with code 1
          
          expected_status="HTTP/1.1 200 OK"
          actual_status=$(curl -I -X GET http://localhost:22300/api/ping | head -n 1)
          if [[ ! "$actual_status" =~ "$expected_status" ]]; then 
            echo 'Failed while checking the status code after request to /api/ping'
            echo 'expected: ' $expected_status
            echo 'actual:   ' $actual_status
            exit 1; 
          fi
          
          # Check if the body response is correct
          # if the actual_body is different of expected_body exit with code 1
          expected_body='{"status":"ok","message":"Joplin Server is running"}'
          actual_body=$(curl http://localhost:22300/api/ping)
          
          if [[ "$actual_body" != "$expected_body" ]]; then
            echo 'Failed while checking the body response after request to /api/ping'
            exit 1;
          fi

